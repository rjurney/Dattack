/*
Copyright 2008-2011 Gephi
Authors : Taras Klaskovsky <megaterik@gmail.com>
Website : http://www.gephi.org

This file is part of Gephi.

Gephi is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as
published by the Free Software Foundation, either version 3 of the
License, or (at your option) any later version.

Gephi is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with Gephi.  If not, see <http://www.gnu.org/licenses/>.
*/
package org.gephi.ui.exporter.plugin;

import org.gephi.io.exporter.plugin.ExporterDL;

public class UIExporterDLPanel extends javax.swing.JPanel {
    

    /** Creates new customizer UIExporterDLPanel */
    public UIExporterDLPanel() {
        initComponents();
    }
    
    void setup(ExporterDL exporter)
    {
       // normalizeCheckBox.setSelected(exporter.isNormalize());
        matrixRadioButton.setSelected(exporter.isUseMatrixFormat());
        listRadioButton.setSelected(exporter.isUseListFormat());
        symmetricCheckBox.setSelected(exporter.isMakeSymmetricMatrix());
        symmetricCheckBox.setEnabled(matrixRadioButton.isSelected());
    }
    
    void unsetup(ExporterDL exporter)
    {
       // exporter.setNormalize(normalizeCheckBox.isSelected());
        exporter.setUseMatrixFormat(matrixRadioButton.isSelected());
        exporter.setUseListFormat(listRadioButton.isSelected());
        exporter.setMakeSymmetricMatrix(symmetricCheckBox.isSelected());
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        matrixRadioButton = new javax.swing.JRadioButton();
        listRadioButton = new javax.swing.JRadioButton();
        symmetricCheckBox = new javax.swing.JCheckBox();

        jLabel1.setText("jLabel1");

        matrixRadioButton.setText("Matrix");
        matrixRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrixRadioButtonActionPerformed(evt);
            }
        });

        listRadioButton.setText("List");
        listRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listRadioButtonActionPerformed(evt);
            }
        });

        symmetricCheckBox.setLabel("Symmetric");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(listRadioButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(symmetricCheckBox)
                    .add(matrixRadioButton))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(listRadioButton)
                    .add(matrixRadioButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(symmetricCheckBox)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        symmetricCheckBox.getAccessibleContext().setAccessibleName("symmetricCheckBox");
    }// </editor-fold>//GEN-END:initComponents

    private void matrixRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrixRadioButtonActionPerformed
      listRadioButton.setSelected(!matrixRadioButton.isSelected());
      symmetricCheckBox.setEnabled(matrixRadioButton.isSelected());
    }//GEN-LAST:event_matrixRadioButtonActionPerformed

    private void listRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listRadioButtonActionPerformed
      matrixRadioButton.setSelected(!listRadioButton.isSelected());
      symmetricCheckBox.setEnabled(matrixRadioButton.isSelected());
    }//GEN-LAST:event_listRadioButtonActionPerformed
//FIXME: delete invisible variables
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton listRadioButton;
    private javax.swing.JRadioButton matrixRadioButton;
    private javax.swing.JCheckBox symmetricCheckBox;
    // End of variables declaration//GEN-END:variables
}
